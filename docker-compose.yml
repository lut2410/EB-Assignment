version: '3.4'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD:-SAP@ssword123}
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - app-network
    volumes:
      - dbdata:/var/opt/mssql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  eventmanagement:
    image: eventmanagement
    build:
      context: .
      dockerfile: EventManagement/EventManagements.Presentation/Dockerfile
    ports:
      - "6003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}

  booking:
    image: booking
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - LOGSTASH_HOST=${LOGSTASH_HOST:-logstash}
      - LOGSTASH_PORT=${LOGSTASH_PORT:-5000}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings_MainDB:-Server=sqlserver;Database=EventBooking;User Id=sa;Password=SAP@ssword123;TrustServerCertificate=True;}
      - Redis__ConnectionString=redis:6379
    build:
      context: .
      dockerfile: Booking/Bookings.Presentation/Dockerfile
    ports:
      - "6001:8080"
    depends_on:
      - sqlserver
      - redis
    networks:
      - monitoring
      - elk
      - app-network
    volumes:
      - ./src:/app/src

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
    networks:
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME:-elasadmin}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-elasPass@123}
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    environment:
      - ELASTIC_HOSTS=${ELASTICSEARCH_HOST:-http://elasticsearch:9200}
      - ELASTIC_USER=${ELASTICSEARCH_USERNAME:-elasadmin}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-elasPass@123}
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST:-http://elasticsearch:9200}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elasadmin}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-elasPass@123}
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  app-network:
    driver: bridge
  elk:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  dbdata: